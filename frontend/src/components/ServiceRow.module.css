/* ============================================
   ServiceRow Component Styles

   Features:
   - Enhanced visual hierarchy with improved spacing
   - Toggle button with clear state indicators
   - Proper z-index management to prevent overlay issues
   - Accessible button states with clear feedback
   - Responsive design with proper overflow handling
   ============================================ */

/* Main Row Container */
.serviceRow {
  display: flex;
  align-items: center;
  padding: var(--fluent-space-lg) var(--fluent-space-xl);
  border-bottom: 1px solid rgba(255, 255, 255, 0.08);
  gap: var(--fluent-space-xl);
  transition: all var(--fluent-duration-fast) var(--fluent-easing-standard);
  background: rgba(0, 0, 0, 0.2);
  border-left: 3px solid transparent;
  position: relative;
  overflow: visible; /* Allow dropdowns and tooltips to overflow */
  margin-bottom: 2px;
  /* Proper z-index to ensure rows don't overlap incorrectly */
  z-index: 1;
}

.serviceRow:last-child {
  border-bottom: none;
}

/* Hover effect with accent border */
.serviceRow:hover {
  background: rgba(0, 120, 212, 0.08);
  border-left-color: var(--fluent-accent);
  /* Slightly elevate on hover for better interaction feedback */
  z-index: 2;
}

/* Disabled service row styling */
.serviceRowDisabled {
  opacity: 0.6;
  background: rgba(100, 100, 100, 0.1);
}

.serviceRowDisabled:hover {
  background: rgba(100, 100, 100, 0.15);
  border-left-color: rgba(150, 150, 150, 0.5);
}

/* Service Information Section */
.serviceInfo {
  flex: 1;
  min-width: 0;
  position: relative;
  z-index: 1;
}

.serviceName {
  font-weight: 600;
  font-size: 15px;
  color: var(--fluent-text-primary);
  margin-bottom: 4px;
  line-height: 1.4;
  letter-spacing: -0.01em;
}

.serviceSubtext {
  font-size: 12px;
  color: var(--fluent-text-tertiary);
  font-family: var(--fluent-font-mono);
  opacity: 0.7;
  display: flex;
  align-items: center;
  gap: 8px;
  flex-wrap: wrap;
}

.separator {
  color: var(--fluent-text-tertiary);
  opacity: 0.5;
}

/* Startup Type Badges */
.startupAuto {
  padding: 2px 8px;
  border-radius: 4px;
  font-size: 11px;
  font-weight: 600;
  background: rgba(35, 134, 54, 0.2);
  color: var(--fluent-success);
  border: 1px solid rgba(35, 134, 54, 0.4);
}

.startupManual {
  padding: 2px 8px;
  border-radius: 4px;
  font-size: 11px;
  font-weight: 600;
  background: rgba(0, 120, 212, 0.2);
  color: var(--fluent-accent);
  border: 1px solid rgba(0, 120, 212, 0.4);
}

.startupDisabled {
  padding: 2px 8px;
  border-radius: 4px;
  font-size: 11px;
  font-weight: 600;
  background: rgba(150, 150, 150, 0.2);
  color: rgba(200, 200, 200, 0.8);
  border: 1px solid rgba(150, 150, 150, 0.4);
}

/* Status Badge Section */
.statusBadge {
  min-width: 120px;
  text-align: center;
  position: relative;
  z-index: 1;
}

.statusIndicator {
  display: inline-flex;
  align-items: center;
  gap: 8px;
  padding: 6px 14px;
  border-radius: var(--radius-lg);
  font-size: 11px;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  font-family: var(--font-mono);
  -webkit-backdrop-filter: blur(8px);
  backdrop-filter: blur(8px);
  border: 1px solid;
  position: relative;
  overflow: hidden;
}

.statusIndicator::before {
  content: '';
  width: 6px;
  height: 6px;
  border-radius: 50%;
  display: inline-block;
  position: relative;
  z-index: 1;
}

/* Status States */
.statusRunning {
  background: rgba(35, 134, 54, 0.15);
  border-color: rgba(35, 134, 54, 0.5);
  color: var(--status-running-text);
  box-shadow: 0 0 12px rgba(35, 134, 54, 0.3);
}

.statusRunning::before {
  background-color: var(--status-running-text);
  box-shadow: 0 0 8px var(--status-running-text);
}

.statusStopped {
  background: rgba(218, 54, 51, 0.15);
  border-color: rgba(218, 54, 51, 0.5);
  color: var(--status-stopped-text);
  box-shadow: 0 0 12px rgba(218, 54, 51, 0.3);
}

.statusStopped::before {
  background-color: var(--status-stopped-text);
}

.statusTransitioning {
  background: rgba(210, 153, 34, 0.15);
  border-color: rgba(210, 153, 34, 0.5);
  color: var(--status-warning-text);
  box-shadow: 0 0 12px rgba(210, 153, 34, 0.3);
  animation: pulse 1.5s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

.statusTransitioning::before {
  background-color: var(--status-warning-text);
  animation: blink 1s ease-in-out infinite;
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
    box-shadow: 0 0 12px rgba(210, 153, 34, 0.3);
  }
  50% {
    opacity: 0.7;
    box-shadow: 0 0 20px rgba(210, 153, 34, 0.5);
  }
}

@keyframes blink {
  0%, 100% {
    opacity: 1;
    box-shadow: 0 0 8px var(--status-warning-text);
  }
  50% {
    opacity: 0.3;
    box-shadow: 0 0 4px var(--status-warning-text);
  }
}

/* Controls Section */
.controls {
  display: flex;
  gap: 8px;
  position: relative;
  z-index: 1;
  flex-wrap: wrap;
}

/* Base Button Styles */
.button {
  padding: 8px 16px;
  font-size: 13px;
  font-weight: 500;
  border: 1px solid var(--border-primary);
  border-radius: var(--radius-sm);
  background: rgba(22, 27, 34, 0.6);
  color: var(--text-secondary);
  cursor: pointer;
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  white-space: nowrap;
  -webkit-backdrop-filter: blur(8px);
  backdrop-filter: blur(8px);
  position: relative;
  overflow: hidden;
  /* Ensure buttons are always clickable */
  z-index: 2;
}

.button:hover:not(:disabled) {
  background: rgba(0, 120, 212, 0.2);
  border-color: var(--fluent-accent);
  color: var(--fluent-text-primary);
}

.button:active:not(:disabled) {
  background: rgba(0, 120, 212, 0.15);
}

.button:disabled {
  opacity: 0.3;
  cursor: not-allowed;
  background: rgba(22, 27, 34, 0.3);
  color: var(--text-disabled);
  filter: grayscale(1);
}

/* Toggle Button Specific Styles */
.toggleButton {
  display: flex;
  align-items: center;
  gap: 6px;
  padding: 8px 14px;
  font-weight: 600;
  min-width: 100px;
  justify-content: center;
}

.toggleIcon {
  font-size: 14px;
  line-height: 1;
}

/* Enable Button State */
.enableButton {
  background: rgba(35, 134, 54, 0.15);
  border-color: rgba(35, 134, 54, 0.5);
  color: var(--fluent-success);
}

.enableButton:hover:not(:disabled) {
  background: rgba(35, 134, 54, 0.25);
  border-color: var(--fluent-success);
  box-shadow: 0 0 12px rgba(35, 134, 54, 0.3);
}

.enableButton:active:not(:disabled) {
  background: rgba(35, 134, 54, 0.2);
  transform: scale(0.98);
}

/* Disable Button State */
.disableButton {
  background: rgba(218, 54, 51, 0.15);
  border-color: rgba(218, 54, 51, 0.5);
  color: var(--fluent-error);
}

.disableButton:hover:not(:disabled) {
  background: rgba(218, 54, 51, 0.25);
  border-color: var(--fluent-error);
  box-shadow: 0 0 12px rgba(218, 54, 51, 0.3);
}

.disableButton:active:not(:disabled) {
  background: rgba(218, 54, 51, 0.2);
  transform: scale(0.98);
}

/* Focus States for Accessibility */
.button:focus-visible {
  outline: 2px solid var(--fluent-accent);
  outline-offset: 2px;
  box-shadow: 0 0 0 4px rgba(0, 120, 212, 0.2);
}

/* Responsive Design */
@media (max-width: 1024px) {
  .serviceRow {
    flex-wrap: wrap;
    gap: var(--fluent-space-md);
  }

  .statusBadge {
    min-width: 100px;
  }

  .controls {
    width: 100%;
    justify-content: flex-start;
  }

  .button {
    flex: 1;
    min-width: 80px;
  }
}

@media (max-width: 768px) {
  .serviceRow {
    padding: var(--fluent-space-md);
  }

  .button {
    padding: 6px 12px;
    font-size: 12px;
  }

  .toggleButton {
    min-width: 90px;
  }
}
