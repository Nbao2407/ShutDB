/* ============================================
   ServiceTable Component Styles
   
   Based on srcff reference implementation with:
   - Glass morphism table container
   - Modern table structure with proper spacing
   - Action buttons with hover effects
   - Service icons and hierarchical name display
   - Consistent with existing design system
   ============================================ */

/* Main table container with glass morphism effect */
.tableContainer {
  border-radius: var(--radius);
  overflow: hidden;
  /* Glass panel styling is applied via className */
}

/* Table base styling */
.serviceTable {
  width: 100%;
  border-collapse: separate;
  border-spacing: 0;
  background: transparent;
  font-size: 14px;
}

/* ============================================
   Table Header Styling
   ============================================ */

.headerRow {
  border-bottom: 1px solid hsl(var(--border) / 0.5);
}

.headerRow:hover {
  background: transparent !important;
}

.serviceTable th {
  padding: 12px 16px;
  text-align: left;
  font-weight: 600;
  font-size: 13px;
  color: hsl(var(--muted-foreground));
  background: transparent;
  border-bottom: 1px solid hsl(var(--border) / 0.5);
}

/* Header column specific widths following srcff patterns */
.nameHeader {
  width: 300px;
  min-width: 250px;
}

.statusHeader {
  width: 150px;
  min-width: 120px;
}

.startupHeader {
  width: 150px;
  min-width: 120px;
}

.actionsHeader {
  width: 160px;
  min-width: 140px;
  text-align: center;
}

/* ============================================
   Table Row Styling
   ============================================ */

.serviceRow {
  border-bottom: 1px solid hsl(var(--border) / 0.3);
  cursor: pointer;
}

.serviceRow:hover {
  background: hsl(var(--secondary) / 0.3);
}

.serviceRow:last-child {
  border-bottom: none;
}

.serviceTable td {
  padding: 12px 16px;
  vertical-align: middle;
  border-bottom: none; /* Handled by row */
}

/* ============================================
   Name Column Styling
   ============================================ */

.nameCell {
  font-weight: 500;
}

.nameContent {
  display: flex;
  align-items: center;
  gap: 8px;
}

.serviceIcon {
  width: 16px;
  height: 16px;
  border-radius: 2px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 12px;
  flex-shrink: 0;
}

.iconRunning {
  background: hsl(var(--primary) / 0.2);
  color: hsl(var(--primary));
}

.iconStopped {
  background: hsl(var(--muted) / 0.5);
  color: hsl(var(--muted-foreground));
}

.nameText {
  min-width: 0;
  flex: 1;
}

.displayName {
  font-size: 14px;
  color: hsl(var(--foreground));
  font-weight: 500;
  line-height: 1.2;
  margin-bottom: 2px;
}

.serviceName {
  font-size: 12px;
  color: hsl(var(--muted-foreground));
  font-weight: 400;
  line-height: 1.2;
}

/* ============================================
   Status Column Styling
   ============================================ */

.statusCell {
  /* StatusBadge component handles its own styling */
}

/* ============================================
   Startup Type Column Styling
   ============================================ */

.startupCell {
}

.startupText {
  font-size: 14px;
  color: hsl(var(--foreground));
  font-weight: 400;
}

/* ============================================
   Error Row Styling
   ============================================ */

.errorRow {
  background: rgba(239, 68, 68, 0.05);
  border-bottom: 1px solid rgba(239, 68, 68, 0.2);
}

.errorCell {
  padding: 8px 16px;
  text-align: center;
}

.errorMessage {
  color: #ef4444;
  font-size: 13px;
  font-weight: 500;
}

/* ============================================
   Actions Column Styling
   ============================================ */

.actionsCell {
  text-align: center;
}

.actionButtons {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 4px;
}

.actionBtn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 28px;
  height: 28px;
  padding: 0;
  border-radius: 4px;
  background: transparent;
  border: none;
  cursor: pointer;
  transition: var(--transition-smooth);
  color: hsl(var(--muted-foreground));
  /* Exclude from window dragging */
  --wails-draggable: no-drag;
}

.actionBtn:hover:not(:disabled) {
  transform: none;
  box-shadow: none;
}

.actionBtn:disabled {
  opacity: 0.4;
  cursor: not-allowed;
  pointer-events: none;
}

.actionBtn:focus-visible {
  outline: 2px solid hsl(var(--ring));
  outline-offset: 2px;
  box-shadow: 0 0 0 4px hsl(var(--ring) / 0.2);
}

/* Action button variants with hover effects following srcff patterns */
.startBtn:hover:not(:disabled) {
  background: hsl(var(--success) / 0.2);
  color: hsl(var(--success));
}

.stopBtn:hover:not(:disabled) {
  background: hsl(var(--destructive) / 0.2);
  color: hsl(var(--destructive));
}

.restartBtn:hover:not(:disabled) {
  background: hsl(var(--info) / 0.2);
  color: hsl(var(--info));
}

.powerBtn:hover:not(:disabled) {
  background: hsl(var(--warning) / 0.2);
  color: hsl(var(--warning));
}

/* ============================================
   Empty State Styling
   ============================================ */

.emptyState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 48px 24px;
  text-align: center;
}

.emptyIcon {
  font-size: 48px;
  margin-bottom: 16px;
  opacity: 0.6;
}

.emptyTitle {
  font-size: 18px;
  font-weight: 600;
  color: hsl(var(--foreground));
  margin-bottom: 8px;
}

.emptySubtext {
  font-size: 14px;
  color: hsl(var(--muted-foreground));
  max-width: 400px;
  line-height: 1.5;
}

/* ============================================
   Virtual Scrolling Styles
   ============================================ */

.virtualScrollContainer {
  position: relative;
  height: 100%;
  overflow: hidden;
}

.stickyHeader {
  position: sticky;
  top: 0;
  z-index: 10;
  background: hsl(var(--background) / 0.95);
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
}

.virtualScrollViewport {
  position: relative;
  overflow: auto;
  /* Optimize scrolling performance */
  will-change: scroll-position;
  /* Enable hardware acceleration */
  transform: translateZ(0);
  -webkit-overflow-scrolling: touch;
}

.virtualScrollContent {
  position: relative;
  width: 100%;
}

.virtualRow {
  /* Promote to composite layer for smooth scrolling */
  will-change: transform;
  contain: layout style paint;
  display: contents; /* Allow table row to be properly positioned */
}

/* Performance optimizations for virtual scrolling */
.virtualScrollViewport::-webkit-scrollbar {
  width: 8px;
}

.virtualScrollViewport::-webkit-scrollbar-track {
  background: hsl(var(--muted) / 0.1);
  border-radius: 4px;
}

.virtualScrollViewport::-webkit-scrollbar-thumb {
  background: hsl(var(--muted-foreground) / 0.3);
  border-radius: 4px;
  transition: background-color 0.2s ease;
}

.virtualScrollViewport::-webkit-scrollbar-thumb:hover {
  background: hsl(var(--muted-foreground) / 0.5);
}

/* ============================================
   Responsive Design
   ============================================ */

@media (max-width: 1024px) {
  .nameHeader {
    width: 250px;
    min-width: 200px;
  }

  .statusHeader,
  .startupHeader {
    width: 130px;
    min-width: 110px;
  }

  .actionsHeader {
    width: 140px;
    min-width: 120px;
  }
}

@media (max-width: 768px) {
  .serviceTable th,
  .serviceTable td {
    padding: 8px 12px;
  }

  .nameHeader {
    width: 200px;
    min-width: 180px;
  }

  .statusHeader,
  .startupHeader {
    width: 120px;
    min-width: 100px;
  }

  .actionsHeader {
    width: 120px;
    min-width: 100px;
  }

  .actionButtons {
    gap: 2px;
  }

  .actionBtn {
    width: 24px;
    height: 24px;
  }

  .displayName {
    font-size: 13px;
  }

  .serviceName {
    font-size: 11px;
  }

  .startupText {
    font-size: 13px;
  }
}

@media (max-width: 640px) {
  /* Mobile-first table layout */
  .tableContainer {
    border-radius: var(--radius-sm);
    margin: 0 -4px; /* Extend to screen edges */
  }

  .serviceTable {
    font-size: 13px;
  }

  .serviceTable th,
  .serviceTable td {
    padding: 6px 8px;
  }

  /* Adjust column widths for mobile */
  .nameHeader {
    width: auto;
    min-width: 120px;
  }

  .statusHeader {
    width: 80px;
    min-width: 70px;
  }

  .startupHeader {
    width: 90px;
    min-width: 80px;
  }

  .actionsHeader {
    width: 80px;
    min-width: 70px;
  }

  /* Compact action buttons */
  .actionButtons {
    gap: 1px;
  }

  .actionBtn {
    width: 20px;
    height: 20px;
  }

  /* Smaller text */
  .displayName {
    font-size: 12px;
    line-height: 1.3;
  }

  .serviceName {
    font-size: 10px;
    line-height: 1.2;
  }

  .startupText {
    font-size: 11px;
  }

  /* Empty state adjustments */
  .emptyState {
    padding: 24px 12px;
  }

  .emptyIcon {
    font-size: 32px;
    margin-bottom: 8px;
  }

  .emptyTitle {
    font-size: 15px;
    margin-bottom: 6px;
  }

  .emptySubtext {
    font-size: 12px;
    line-height: 1.4;
  }
}

/* Very small screens - ultra compact */
@media (max-width: 480px) {
  .tableContainer {
    margin: 0 -8px;
  }

  .serviceTable {
    font-size: 12px;
  }

  .serviceTable th,
  .serviceTable td {
    padding: 4px 6px;
  }

  .nameHeader {
    min-width: 100px;
  }

  .statusHeader,
  .startupHeader,
  .actionsHeader {
    width: 70px;
    min-width: 60px;
  }

  .displayName {
    font-size: 11px;
  }

  .serviceName {
    font-size: 9px;
  }

  .startupText {
    font-size: 10px;
  }

  .actionBtn {
    width: 18px;
    height: 18px;
  }

  /* Hide service names on very small screens to save space */
  .serviceName {
    display: none;
  }

  .nameContent {
    gap: 4px;
  }

  .serviceIcon {
    width: 12px;
    height: 12px;
    font-size: 10px;
  }
}

/* ============================================
   High Contrast Mode Support
   ============================================ */

@media (prefers-contrast: high) {
  .serviceRow {
    border-bottom: 2px solid hsl(var(--border));
  }

  .headerRow {
    border-bottom: 2px solid hsl(var(--border));
  }

  .actionBtn {
    border: 1px solid hsl(var(--border));
  }

  .serviceIcon {
    border: 1px solid currentColor;
  }
}

/* ============================================
   Reduced Motion Support
   ============================================ */

@media (prefers-reduced-motion: reduce) {
  .actionBtn {
    transition: none;
  }

  .serviceRow {
    transition: none;
  }
}

/* ============================================
   Accessibility Utilities
   ============================================ */

/* Screen reader only content */
:global(.sr-only) {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/* Enhanced focus indicators for better accessibility */
.serviceTable th:focus-visible,
.serviceTable td:focus-visible {
  outline: 2px solid hsl(var(--ring));
  outline-offset: 2px;
  box-shadow: 0 0 0 4px hsl(var(--ring) / 0.2);
}

/* Table navigation enhancements */
.serviceTable {
  /* Ensure table is keyboard navigable */
  position: relative;
}

.serviceTable:focus-within {
  /* Highlight table when any element inside has focus */
  box-shadow: 0 0 0 2px hsl(var(--ring) / 0.3);
  border-radius: var(--radius);
}

/* Row focus management */
.serviceRow:focus-within {
  background: hsl(var(--secondary) / 0.5);
  position: relative;
  z-index: 1;
}

/* Skip to content functionality */
:global(.skip-link) {
  position: absolute;
  top: -40px;
  left: 6px;
  background: hsl(var(--background));
  color: hsl(var(--foreground));
  padding: 8px;
  text-decoration: none;
  border-radius: 4px;
  border: 2px solid hsl(var(--ring));
  z-index: 1000;
}

:global(.skip-link:focus) {
  top: 6px;
}

/* Keyboard navigation hints */
.tableContainer::before {
  content: "";
  position: absolute;
  top: -1px;
  left: -1px;
  right: -1px;
  bottom: -1px;
  border: 2px solid transparent;
  border-radius: inherit;
  pointer-events: none;
  transition: border-color 0.2s ease;
}

.tableContainer:focus-within::before {
  border-color: hsl(var(--ring) / 0.3);
}

/* ============================================
   Print Styles
   ============================================ */

@media print {
  .tableContainer {
    background: white;
    border: 1px solid black;
  }

  .actionButtons {
    display: none;
  }

  .serviceTable th,
  .serviceTable td {
    color: black;
    border-bottom: 1px solid black;
  }

  .displayName,
  .startupText {
    color: black;
  }

  .serviceName {
    color: #666;
  }
}
